{{- if .Values.components.ui.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mint.prefix" . }}-ui-config-map
  namespace: {{ .Release.Namespace }}
data:
  config.js: |
    window.REACT_APP_WELCOME_MESSAGE = {{ .Values.welcome_message | quote }};
    {{- if .Values.default_user }}
    window.REACT_APP_MODEL_CATALOG_DEFAULT_USER= {{ .Values.default_user | quote }};
    {{- end }}
    // Mint Services
    {{ if eq .Values.service.type "ClusterIP" }}
    {{ with .Values.components.cromo }}
    {{ if  .enabled }}
    window.REACT_APP_CROMO_URL = "http{{ if .ingress.tls }}s{{ end }}://{{ with (first .ingress.hosts ) }}{{ .host }}{{ end }}";
    {{ end }}
    {{ end }}
    {{ with .Values.components.data_catalog }}
    {{ if  .enabled }}
    window.REACT_APP_DATA_CATALOG_API = "http{{ if .ingress.tls }}s{{ end }}://{{ with (first .ingress.hosts ) }}{{ .host }}{{ end }}";
    {{ end }}
    {{ end }}
    {{ with .Values.components.model_catalog_api}}
    {{ if  .enabled }}
    window.REACT_APP_MODEL_CATALOG_API = "http{{ if .ingress.tls }}s{{ end }}://{{ with (first .ingress.hosts ) }}{{ .host }}{{ end }}/{{ .api_version }}";
    {{ end }}
    {{ end }}
    {{ with .Values.components.hasura }}
    {{ if  .enabled }}
    window.REACT_APP_GRAPHQL_ENDPOINT = "{{ with (first .ingress.hosts ) }}{{ .host }}{{ end }}/v1/graphql";
    window.REACT_APP_GRAPHQL_ENABLE_SSL = {{ if .ingress.tls  }}true{{else}}false{{ end }};
    {{ end }}
    {{ end }}

    {{ if  .Values.components.ensemble_manager.enabled }
    {{ with .Values.components.ensemble_manager.config.execution_engine }}
    window.REACT_APP_ENSEMBLE_MANAGER_API = "http{{ if .ingress.tls }}s{{ end }}://{{ with (first .ingress.hosts ) }}{{ .host }}{{ end }}/{{ .api_version }}";

    window.REACT_APP_EXECUTION_ENGINE = "{{ .type }}";
    {{ if eq .config.type "localex" }}
    window.REACT_APP_LOCALEX_CODEDIR = "{{ .data_dir }}/code";
    window.REACT_APP_LOCALEX_DATADIR = "{{ .data_dir }}/data";
    window.REACT_APP_LOCALEX_TEMPDIR = "{{ .data_dir }}/temp";
    window.REACT_APP_LOCALEX_LOGDIR = "{{ .data_dir }}/logs";
    window.REACT_APP_LOCALEX_DATAURL = "{{ .data_url }}/data";
    window.REACT_APP_LOCALEX_LOGURL = "{{ .data_url }}/logs";
    window.REACT_APP_LOCALEX_PARALLEL = "{{ .parallellelism }}";
    {{ end }}
    {{ if eq .config.type "tapis" }}
    window.REACT_APP_LOCALEX_CODEDIR = "{{ .data_dir }}/code";
    window.REACT_APP_LOCALEX_DATADIR = "{{ .data_dir }}/data";
    window.REACT_APP_LOCALEX_TEMPDIR = "{{ .data_dir }}/temp";
    window.REACT_APP_LOCALEX_LOGDIR = "{{ .data_dir }}/logs";
    window.REACT_APP_LOCALEX_DATAURL = "{{ .data_url }}/data";
    window.REACT_APP_LOCALEX_LOGURL = "{{ .data_url }}/logs";
    window.REACT_APP_LOCALEX_PARALLEL = "{{ config.parallelism }}";
    {{ end }}
    {{ if eq .config.type "wings" }}
    //Execution - Wings
    window.REACT_APP_WINGS_EXPORT_URL = "{{ .wings_export_url }}";
    window.REACT_APP_WINGS_STORAGE = "{{ .wings_storage }}";
    window.REACT_APP_WINGS_DOTPATH = "{{ .wings_dot_path }}";
    window.REACT_APP_WINGS_ONTURL = "{{ .wings_ont_url }}";
    {{ end }}

    {{ end }}
    {{ end }}

    // Google API Key
    window.REACT_APP_GOOGLE_MAPS_KEY = {{ .Values.google.maps.key | quote }};

    //Authentications
    window.REACT_APP_AUTH_SERVER = {{ .Values.auth.url | quote }};
    window.REACT_APP_AUTH_REALM = {{ .Values.auth.realm | quote }};
    window.REACT_APP_AUTH_CLIENT_ID = {{ .Values.auth.ui_client_id | quote }};

    //Visualization and Ingestion - Not used any more - Remove ?
    window.REACT_APP_VISUALIZATION_URL = "http://dev.viz.mint.isi.edu";
    window.REACT_APP_INGESTION_API = "http://node1.ingestion.mint.isi.edu/v1.3.0";
    window.REACT_APP_AIRFLOW_API = "https://airflow.mint.isi.edu/api/v1";
    window.REACT_APP_AIRFLOW_DAG_DOWNLOAD_THREAD_ID = "download_thread"

    {{ if  and .Values.components.ensemble_manager.config.data_catalog (eq .Values.components.ensemble_manager.config.data_catalog.type "CKAN") }}
    window.REACT_APP_DATA_CATALOG_TYPE = "CKAN";
    window.REACT_APP_DATA_CATALOG_KEY = {{ .Values.secrets.data_catalog.ckan.api_key | quote }};
    {{ end }}

{{- end}}