welcome_message: Welcome to MINT
default_user: mint@isi.edu
service:
  type: NodePort
  port: 30000
hostname: localhost
components:
  backups:
    enabled: false
  cromo:
    enabled: true
    image:
      repository: mintproject/cromo
      tag: 3c75586989aedf2573c37f5352f960c294377931
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: cromo.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  mic_ui:
    enabled: true
    image:
      repository: mintproject/mic-web
      tag: 535e0c08bcd3cb22b486f97536ead14930fb951c
      pullPolicy: IfNotPresent
      environment:
        api_url: null
        airflow_url: https://airflow.mint.isi.edu/api/v1
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: mic.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  mic_api:
    enabled: true
    image:
      repository: mintproject/mic-api
      tag: ee71a1a364fc3d384f85243684ad95d37913b049
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: api.mic.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  mic_api_db:
    image:
      repository: postgres
      tag: 14.6
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: ''
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      dataSource: {}
      existingClaim: ''
      selector: {}
      annotations:
        helm.sh/resource-policy: keep
  data_catalog:
    enabled: false
    image:
      repository: mintproject/data-catalog
      tag: fced7107f1299aa1ef9b36c17704b296b8f764d0
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: datacatalog.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  data_catalog_db:
    image:
      repository: mintproject/data-catalog-db
      tag: dfb7479a7c0a1676c8f77dba52989cfc77c9a76a
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: ''
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      dataSource: {}
      existingClaim: ''
      selector: {}
      annotations:
        helm.sh/resource-policy: keep
  model_catalog_endpoint:
    enabled: true
    image:
      repository: mintproject/model-catalog-endpoint
      tag: 29256555a6fbaefae4729d5cd259564708a4ab04
      pullPolicy: IfNotPresent
    environment:
      dataset: modelcatalog
      graph_base: http://endpoint.mint.isi.edu/modelCatalog-1.8.0/data/
      prefix: https://w3id.org/okn/i/mint/
      backup_file: /fuseki-base/seeds/model-catalog.trig
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: endpoint.models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
    persistence:
      enabled: true
      storageClass: ''
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      dataSource: {}
      existingClaim: ''
      selector: {}
      annotations:
        helm.sh/resource-policy: keep
  hasura:
    enabled: true
    image:
      repository: mintproject/graphql-engine
      tag: 0fc7ce2a5098d2e86f1280f6fa70acfc816a531d
      pullPolicy: IfNotPresent
    environment:
      enable_console: true
      enable_dev_mode: false
      unauthorized_role: anonymous
    ingress:
      enabled: false
      className: null
      annotations: {}
      hosts:
        - host: graphql.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  hasura_db:
    image:
      repository: postgis/postgis
      tag: 10-3.2-alpine
      pullPolicy: IfNotPresent
    persistence:
      enabled: true
      storageClass: ''
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      dataSource: {}
      existingClaim: ''
      selector: {}
      annotations:
        helm.sh/resource-policy: keep
  model_catalog_explorer:
    enabled: true
    image:
      repository: mintproject/model-catalog-explorer
      tag: 0b2f9f0a9124076aeb492add2f123d0757066f6b
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  model_catalog_api:
    enabled: true
    api_version: v1.8.0
    image:
      repository: mintproject/model-catalog-fastapi
      tag: c5f784785c52034f75de24c46b89907c74a14312
      pullPolicy: IfNotPresent
    environment:
      context_dir: contexts/
      queries_dir: queries/
    ingress:
      enabled: false
      className: ''
      annotations:
        nginx.ingress.kubernetes.io/enable-cors: 'true'
      hosts:
        - host: api.models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  ui:
    enabled: true
    image:
      repository: mintproject/mint-ui-lit
      tag: c0da93647c7c9b206eaab571f64511d706486913
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
  ensemble_manager:
    enabled: true
    api_version: v1
    image:
      repository: mintproject/ensemble-manager
      tag: 4821c0408c403a478e7b68ea52470f0f7da84a12
      pullPolicy: IfNotPresent
    environment:
      data_dir: /var/mint
      data_url: http://localhost:30010/data
      parallel: 1
    ingress:
      enabled: false
      className: ''
      annotations: {}
      hosts:
        - host: ensemble-manager.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
google:
  maps:
    key: CHANGEME
secrets:
  database:
    data_catalog:
      username: datacatalog
      password: CHANGEME
      database: datacatalog
    model_catalog_endpoint:
      username: admin
      password: CHANGEME
    hasura:
      username: hasura
      password: CHANGEME
      database: hasura
    mic_api:
      username: mic
      password: CHANGEME
      database: mic
  backups:
    s3:
      access_key: CHANGEME
      secret_key: CHANGEME
      bucket: CHANGEME
      path: CHANGEME
      region: null
      endpoint: example.com
  hasura:
    jwt_secret: '{"type": "RS256", "key": "-----BEGIN CERTIFICATE-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmyQQ56WKKsVCUs8n9swlv5DV7st7UUdvNoDSnwovdU2vinQQ686//vRqlUJ5vpyI7r75qTXCPkXUitDhPvGEMfChnb9tuWdymSyZmMmT+34oaYo/2bGSZjTlLRVfRJjUnFYeWoVLoXVKJolyDWtU6bXbFNnUyysb/6YIpg5sSwxkLs/9yl6HsWdFconxPJO6KmMPSjcOc0fZermNq+cOEvj1OqRhVkxDqBebreI+zcgrJHNSN8d6cxTmfVQl1jIPHvxE5oN7qUdfYmK4D+SOlj8FlkUvwis+3Ix2AQsvNoOD1OzuqUOd/FpXBnEGaeTq9EMwDxplNqltR/qT3/poUwIDAQAB\n-----END CERTIFICATE-----", "allowed_skew": 2}'
    admin_secret: CHANGEME
auth:
  client_id: model_catalog
  url: https://auth.mint.isi.edu/
  realm: production
  ui_client_id: mint-ui
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
