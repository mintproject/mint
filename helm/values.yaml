# Default values for helm.
# This is a YAML-formatted file.
# Declare
welcome_message: Welcome to MINT

# -- The service type to use. Valid values are NodePort and ClusterIP. NodePort is used for local development and ClusterIP is used for production. 
service:
  type: NodePort 
  port: 80

components:
  # -- Cromo configuration
  cromo:
    # - enable the cromo component
    enabled: true
    image:
      # -- cromo image repository
      repository: mintproject/cromo
      # -- cromo image tag
      tag: latest
      # -- cromo image pull policy
      pullPolicy: IfNotPresent
    # -- cromo ingress configuration
    ingress:
      # -- enable the cromo ingress
      enabled: false
      # -- cromo ingress class name
      className: ""
      # -- cromo ingress annotations
      annotations: {}
      # -- cromo ingress hosts
      hosts:
        - host: cromo.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- cromo ingress tls configuration
      tls: []
  data_catalog:
    # -- enable the data catalog component
    enabled: true
    image:
      # -- data catalog image repository
      repository: mintproject/data-catalog
      # -- data catalog image tag
      tag: 89bd8354c69923e2da5db1098f8c3c272f59c0c2
      # -- data catalog image pull policy
      pullPolicy: IfNotPresent
    # -- data catalog ingress configuration
    ingress:
      # -- enable the data catalog ingress
      enabled: false 
      # -- data catalog ingress class name
      className: "" 
      # -- data catalog ingress annotations
      annotations: {} 
      # -- data catalog ingress hosts
      hosts:
        - host: datacatalog.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- data catalog ingress tls configuration
      tls: []
  # -- data database component
  data_catalog_db:
    image:
      # -- data catalog database image repository
      repository: mintproject/data-catalog-db
      # -- data catalog database image tag
      tag: 15f10f5717870ecf1f9e5fb0f193c5ecbf8c2af3
      # -- data catalog database image pull policy
      pullPolicy: IfNotPresent
    persistence:
      # persistence.enabled Enable persistence using Persistent Volume Claims
      #
      enabled: true
      # persistence.storageClass Persistent Volume storage class
      # If defined, storageClassName: <storageClass>
      # If set to "-", storageClassName: "", which disables dynamic provisioning
      # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      #
      storageClass: ""
      # persistence.accessModes [array] Persistent Volume access modes
      #
      accessModes:
        - ReadWriteOnce
      # persistence.size Persistent Volume size
      #
      size: 10Gi
      # persistence.dataSource Custom PVC data source
      #
      dataSource: {}
      # persistence.existingClaim The name of an existing PVC to use for persistence
      #
      existingClaim: ""
      # persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
      # If set, the PVC can't have a PV dynamically provisioned for it
      # E.g.
      # selector:
      #   matchLabels:
      #     app: my-app
      #
      selector: {}
      # persistence.annotations Persistent Volume Claim annotations
      #
      annotations: 
        helm.sh/resource-policy: keep
  # -- Model Catalog RDF store configuration
  model_catalog_endpoint:
    # -- enable the model catalog endpoint component
    enabled: true
    # -- model catalog endpoint image repository
    image:
      # -- model catalog endpoint image repository
      repository: mintproject/model-catalog-endpoint
      # -- model catalog endpoint image tag
      tag: 91dabbb1c1f7b2b838e8d8e75a4091e5ec40d4a1
      # -- model catalog endpoint image pull policy
      pullPolicy: IfNotPresent
    # -- model catalog endpoint ingress configuration
    ingress:
      # -- enable the model catalog endpoint ingress
      enabled: false 
      # -- model catalog endpoint ingress class name
      className: "" 
      # -- model catalog endpoint ingress annotations
      annotations: {} 
      # -- model catalog endpoint ingress hosts
      hosts:
        - host: endpoint.models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- model catalog endpoint ingress tls configuration
      tls: []
  # -- GraphQL hasura engine
  hasura:
    # -- enable the hasura component
    enabled: true
    # -- hasura image repository
    image:
      # -- hasura image repository
      repository: mintproject/graphql-engine
      # -- hasura image tag
      tag: 1335d824b77ccb9ea43718e0cfa57a771401da2e
      # --  hasura image pull policy
      pullPolicy: IfNotPresent
    # -- hasura environment variables
    environment:
      # -- enable the hasura console
      enable_console: true
      # -- enable the hasura dev mode
      enable_dev_mode: false
      # -- unauthenticated role
      unauthorized_role: anonymous
    # -- hasura ingress configuration
    ingress:
      # -- enable the hasura ingress
      enabled: false 
      # -- hasura ingress class name
      className: 
      # -- hasura ingress annotations
      annotations: {} 
      # -- hasura ingress hosts
      hosts:
        - host: graphql.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- hasura ingress tls configuration
      tls: []
  # -- GraphQL Postgres Database
  hasura_db:
    # -- hasura database image repository
    image:
      # -- hasura database image repository
      repository: postgis/postgis
      # -- hasura database image tag
      tag: 10-2.5-alpine
      # -- hasura database image pull policy
      pullPolicy: IfNotPresent
    persistence:
      # persistence.enabled Enable persistence using Persistent Volume Claims
      #
      enabled: true
      # persistence.storageClass Persistent Volume storage class
      # If defined, storageClassName: <storageClass>
      # If set to "-", storageClassName: "", which disables dynamic provisioning
      # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      #
      storageClass: ""
      # persistence.accessModes [array] Persistent Volume access modes
      #
      accessModes:
        - ReadWriteOnce
      # persistence.size Persistent Volume size
      #
      size: 10Gi
      # persistence.dataSource Custom PVC data source
      #
      dataSource: {}
      # persistence.existingClaim The name of an existing PVC to use for persistence
      #
      existingClaim: ""
      # persistence.selector Selector to match an existing Persistent Volume for Hasura data PVC
      # If set, the PVC can't have a PV dynamically provisioned for it
      # E.g.
      # selector:
      #   matchLabels:
      #     app: my-app
      #
      selector: {}
      # persistence.annotations Persistent Volume Claim annotations
      #
      annotations: 
        helm.sh/resource-policy: keep
  model_catalog_explorer:
    # -- enable the model catalog api component
    enabled: true
    # -- api version
    # -- model catalog api image details 
    image:
      # -- model catalog api image repository
      repository: mintproject/model-catalog-explorer
      # -- model catalog api image tag
      tag: 2bc1ec44e5857f4870972367fddf0ca81ed8d27b
      # -- model catalog api image pull policy
      pullPolicy: IfNotPresent
    # -- model catalog explorer ingress configuration
    ingress:
      # -- enable the model catalog api ingress
      enabled: false 
      # -- model catalog api ingress class name
      className: "" 
      # -- model catalog api ingress annotations
      annotations: {} 
      # -- model catalog api ingress hosts
      hosts:
        - host: models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- model catalog api ingress tls configuration
      tls: []
  # -- Model Catalog configuration
  model_catalog_api:
    # -- enable the model catalog api component
    enabled: true
    # -- api version
    api_version: 'v1.8.0'
    # -- model catalog api image details 
    image:
      # -- model catalog api image repository
      repository: mintproject/model-catalog-fastapi
      # -- model catalog api image tag
      tag: 35c08b8cc3cb461922c9ef7fe11ca0848a71db9f
      # -- model catalog api image pull policy
      pullPolicy: IfNotPresent
    # -- model catalog api environment variables 
    environment:
      # -- where are the contexts stored
      context_dir: contexts/
      # -- where are the queries templates stored
      queries_dir: queries/
      # -- the graph prefix used by the RDF store
      graph_base: 	http://endpoint.mint.isi.edu/modelCatalog-1.8.0/data/
      # -- uri of the RDF resource
      prefix: https://w3id.org/okn/i/mint/
    # -- model catalog api ingress configuration
    ingress:
      # -- enable the model catalog api ingress
      enabled: false 
      # -- model catalog api ingress class name
      className: "" 
      # -- model catalog api ingress annotations
      annotations: 
        nginx.ingress.kubernetes.io/enable-cors: "true"
      # -- model catalog api ingress hosts
      hosts:
        - host: api.models.mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- model catalog api ingress tls configuration
      tls: []
  # -- User Interface configuration
  ui:
    # -- enable the ui component
    enabled: true
    # -- ui image details
    image:
      # -- ui image repository
      repository: mintproject/mint-ui-lit
      # -- ui image tag
      tag: c05faecb6fe85d174c760e6d7a767efcbd3cce7e
      # -- ui image pull policy
      pullPolicy: IfNotPresent
    # -- ui ingress configuration
    ingress:
      # -- enable the ui ingress
      enabled: false 
      # -- ui ingress class name
      className: "" 
      # -- ui ingress annotations
      annotations: {} 
      # -- ui ingress hosts
      hosts:
        - host: mint.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      # -- ui ingress tls configuration
      tls: []


google:
  # -- Google Maps API key
  maps:
    # -- Google Maps API key
    key: CHANGEME 

secrets:
  database:
    # -- Data Catalog database credentials
    data_catalog:
      # -- Data Catalog database username
      username: "datacatalog"
      # -- Data Catalog database password
      password: "CHANGEME"
      # -- Data Catalog database name
      database: "datacatalog"
    # -- Model Catalog database credentials
    model_catalog_endpoint:
      # -- Model Catalog database username
      username: "admin"
      # -- Model Catalog database password
      password: "CHANGEME"
    # -- GraphQL database credentials
    hasura:
      # -- GraphQL database username
      username: "hasura"
      # -- GraphQL database password
      password: "CHANGEME"
      # -- GraphQL database name
      database: "hasura"
  # -- GraphQL admin credentials
  hasura:
    # -- RS256 JWT public certificate from the OIDC provider
    jwt_secret: '{"type": "RS256", "key": "-----BEGIN CERTIFICATE-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmyQQ56WKKsVCUs8n9swlv5DV7st7UUdvNoDSnwovdU2vinQQ686//vRqlUJ5vpyI7r75qTXCPkXUitDhPvGEMfChnb9tuWdymSyZmMmT+34oaYo/2bGSZjTlLRVfRJjUnFYeWoVLoXVKJolyDWtU6bXbFNnUyysb/6YIpg5sSwxkLs/9yl6HsWdFconxPJO6KmMPSjcOc0fZermNq+cOEvj1OqRhVkxDqBebreI+zcgrJHNSN8d6cxTmfVQl1jIPHvxE5oN7qUdfYmK4D+SOlj8FlkUvwis+3Ix2AQsvNoOD1OzuqUOd/FpXBnEGaeTq9EMwDxplNqltR/qT3/poUwIDAQAB\n-----END CERTIFICATE-----"}'
    # -- HASURA_GRAPHQL_ADMIN_SECRET
    admin_secret: "CHANGEME"


# -- Authentication configuration
auth:
  # -- Client ID
  client_id: model_catalog 
  # -- Keycloak URL
  url: https://auth.mint.isi.edu/
  # -- Realm
  realm: production 
  # -- Client ID
  ui_client_id: mint-ui
  # -- Keylocka URL token

  
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
