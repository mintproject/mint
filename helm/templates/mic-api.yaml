---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "mint.prefix" . }}-mic_api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: "api"
      port: 80
      targetPort: 3000
      {{ if eq .Values.service.type "NodePort" }}
      nodePort: {{ include "helm.mic_api_node_port" . }}
      {{ end }}
      protocol: TCP
    - name: "postgres"
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: {{ include "mint.prefix" . }}-mic_api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mint.prefix" . }}-mic_api
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "mint.prefix" . }}-mic_api
  template:
    metadata:
      labels:
        app: {{ include "mint.prefix" . }}-mic_api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mic_api
          {{- with .Values.components.mic_api  }}
          image: "{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: DB_HOST
              value: {{ include "mint.prefix" $ }}-mic_api
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic_api-db-secrets
                  key: database 
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic_api-db-secrets
                  key: username 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic_api-db-secrets
                  key: password
        - name: mic_api-db
          {{- with .Values.components.mic_api_db }}
          image: "{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- end }}
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: mic_api-db
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic-api-db-secrets
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic-api-db-secrets
                  key: username
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "mint.prefix" . }}-mic-api-db-secrets
                  key: database 
      volumes:
        - name: mic_api-db
          {{- if .Values.components.mic_api_db.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.components.mic_api_db.persistence.existingClaim }}
            claimName: {{ .Values.components.mic_api_db.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "mint.prefix" . }}-mic_api-db
            {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}